{"version":3,"sources":["Components/Balance.tsx","Components/IncExpView.tsx","Components/AddIncome.tsx","Components/AddExpense.tsx","budgetImage.png","Components/IncExpChart.tsx","App.tsx","index.tsx"],"names":["Balance","totalIncome","totalExpense","className","IncExpView","AddIncome","inc","setInc","useState","addInc","setAddInc","addAmount","setAddAmount","handleChange","e","target","name","value","type","placeholder","onChange","onClick","amount","style","height","renderThumbVertical","props","backgroundColor","width","opacity","map","i","overflow","textOverflow","filter","incf","AddExpense","exp","setExp","AddExp","setAddExp","AddExpAmount","setAddExpAmount","ex","expf","IncExpChart","data","labels","datasets","label","options","maintainAspectRatio","App","reduce","totalinc","total","Number","totalexp","tot","src","budgetImage","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAkBeA,EAfC,SAAC,GAGwB,IAFvCC,EAEsC,EAFtCA,YACAC,EACsC,EADtCA,aAEA,OACE,sBAAKC,UAAU,gBAAf,UACE,gCACE,oBAAIA,UAAU,YAAd,qBADF,IACyC,0BAEzC,8BACE,qBAAIA,UAAU,MAAd,iBAAsBF,EAAcC,WCU7BE,G,MApBI,SAAC,GAGqB,IAFvCH,EAEsC,EAFtCA,YACAC,EACsC,EADtCA,aAEA,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,YAAd,oBACA,uBACA,qBAAIA,UAAU,MAAd,iBAAsBF,QAGxB,sBAAKE,UAAU,gBAAf,UACE,oBAAIA,UAAU,YAAd,sBACA,uBACA,qBAAIA,UAAU,MAAd,iBAAsBD,a,0DCwFfG,EA/FG,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,IAAKC,EAA8C,EAA9CA,OACxB,EAA4BC,mBAAiB,IAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,mBAAiB,IAAnD,mBAAOG,EAAP,KAAkBC,EAAlB,KAOMC,EAAe,SAACC,GACE,eAAlBA,EAAEC,OAAOC,KACXN,EAAUI,EAAEC,OAAOE,OAEnBL,EAAaE,EAAEC,OAAOE,QAG1B,OACE,sBAAKd,UAAU,sBAAf,UACE,uBACEA,UAAU,YACVe,KAAK,OACLF,KAAK,aACLG,YAAY,qBACZF,MAAOR,EACPW,SAAUP,IAIZ,uBACA,uBACEV,UAAU,kBACVe,KAAK,SACLF,KAAK,eACLG,YAAY,uBACZF,MAAON,EACPS,SAAUP,IAEZ,uBACA,wBAAQV,UAAU,UAAUe,KAAK,SAASG,QAlC/B,WACbd,EAAO,GAAD,mBAAKD,GAAL,CAAU,CAAEU,KAAMP,EAAQa,OAAQX,MACxCD,EAAU,IACVE,EAAa,KA+BX,oBAGA,uBACA,oBAAIT,UAAU,YAAd,iCACA,cAAC,aAAD,CACEA,UAAU,UACVoB,MAAO,CAAEC,OAAQ,KACjBC,oBAAqB,gBAAGF,EAAH,EAAGA,MAAUG,EAAb,wBACnB,+CACMA,GADN,IAEEH,MAAK,2BACAA,GADA,IAEHI,gBAAiB,OACjBC,MAAO,MACPC,QAAS,UAVjB,SAeGvB,EAAIwB,KAAI,SAACC,GAAD,OACP,sBAAK5B,UAAU,WAAf,UACE,qBACEoB,MAAO,CACLK,MAAO,MACPI,SAAU,SACVC,aAAc,YAJlB,SAOGF,EAAEf,OAEL,sBACEO,MAAO,CACLK,MAAO,OAFX,iBAKIG,EAAET,UAEN,wBACEnB,UAAU,UACVkB,QAAS,WACPd,EACED,EAAI4B,QACF,SAACC,GAAD,OACEA,EAAKnB,OAASe,EAAEf,MAAQmB,EAAKb,SAAWS,EAAET,YANpD,SAWE,cAAC,IAAD,kB,oBCFCc,EArFI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,IAAKC,EAA+C,EAA/CA,OACzB,EAA4B9B,mBAAiB,IAA7C,mBAAO+B,EAAP,KAAeC,EAAf,KACA,EAAwChC,mBAAiB,IAAzD,mBAAOiC,EAAP,KAAqBC,EAArB,KAQA,OACE,sBAAKvC,UAAU,uBAAf,UACE,uBACEA,UAAU,YACVe,KAAK,OACLC,YAAY,sBACZF,MAAOsB,EACPnB,SAAU,SAACN,GAAD,OAAO0B,EAAU1B,EAAEC,OAAOE,UAEtC,uBACA,uBACEd,UAAU,kBACVe,KAAK,SACLC,YAAY,wBACZF,MAAOwB,EACPrB,SAAU,SAACN,GAAD,OAAO4B,EAAgB5B,EAAEC,OAAOE,UAE5C,uBACA,wBAAQd,UAAU,UAAUe,KAAK,SAASG,QAxB9B,WACdiB,EAAO,GAAD,mBAAKD,GAAL,CAAU,CAAErB,KAAMuB,EAAQjB,OAAQmB,MACxCD,EAAU,IACVE,EAAgB,KAqBd,oBAGA,uBACA,oBAAIvC,UAAU,YAAd,kCACA,cAAC,aAAD,CACEA,UAAU,UACVoB,MAAO,CAAEC,OAAQ,KACjBC,oBAAqB,gBAAGF,EAAH,EAAGA,MAAUG,EAAb,wBACnB,+CACMA,GADN,IAEEH,MAAK,2BACAA,GADA,IAEHI,gBAAiB,OACjBC,MAAO,MACPC,QAAS,UAVjB,SAeGQ,EAAIP,KAAI,SAACa,GAAD,OACP,sBAAKxC,UAAU,WAAf,UACE,qBACEoB,MAAO,CACLK,MAAO,MACPI,SAAU,SACVC,aAAc,YAJlB,SAOGU,EAAG3B,OAEN,sBACEO,MAAO,CACLK,MAAO,OAFX,iBAKIe,EAAGrB,UAGP,wBACEnB,UAAU,UACVkB,QAAS,kBACPiB,EACED,EAAIH,QACF,SAACU,GAAD,OAAUA,EAAK5B,OAAS2B,EAAG3B,MAAQ4B,EAAKtB,SAAWqB,EAAGrB,YAL9D,SAUE,cAAC,IAAD,kBCxFC,MAA0B,wC,QC2B1BuB,G,OAvBK,SAAC,GAGoB,IAFvC5C,EAEsC,EAFtCA,YACAC,EACsC,EADtCA,aAEA,OACE,qBAAKC,UAAU,QAAf,SACE,cAAC,IAAD,CACE2C,KAAM,CACJC,OAAQ,CAAC,kBAAmB,oBAE5BC,SAAU,CACR,CACEC,MAAO,SACPH,KAAM,CAAC7C,EAAaC,GACpByB,gBAAiB,CAAC,qBAAsB,yBAI9CuB,QAAS,CAAEC,qBAAqB,SCwBzBC,EApCH,WACV,MAAsB5C,mBAAwB,IAA9C,mBAAOF,EAAP,KAAYC,EAAZ,KACA,EAAsBC,mBAAwB,IAA9C,mBAAO6B,EAAP,KAAYC,EAAZ,KAEMrC,EAAcK,EAAI+C,QACtB,SAACC,EAAUC,GAAX,OAAiCD,EAAWE,OAAOD,EAAMjC,UACzD,GAEIpB,EAAemC,EAAIgB,QACvB,SAACI,EAAUC,GAAX,OAA+BD,EAAWD,OAAOE,EAAIpC,UACrD,GAEF,OACE,sBAAKnB,UAAU,YAAf,UACE,qBAAKwD,IAAKC,EAAaC,IAAI,aAAa1D,UAAU,UAClD,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,QAAd,4BACA,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CAASF,YAAaA,EAAaC,aAAcA,IACjD,cAAC,EAAD,CAAYD,YAAaA,EAAaC,aAAcA,IACpD,cAAC,EAAD,CACED,YAAaA,EACbC,aAAcA,OAGlB,sBAAKC,UAAU,kBAAf,UACE,cAAC,EAAD,CAAWG,IAAKA,EAAKC,OAAQA,IAC7B,cAAC,EAAD,CAAY8B,IAAKA,EAAKC,OAAQA,iBClC1CwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c33361b9.chunk.js","sourcesContent":["import \"./Balance.css\";\r\nimport { IntTotalAmountProps } from \"./Interfaces\";\r\n\r\nconst Balance = ({\r\n  totalIncome,\r\n  totalExpense,\r\n}: IntTotalAmountProps): JSX.Element => {\r\n  return (\r\n    <div className=\"bal-container\">\r\n      <div>\r\n        <h2 className=\"bal-title\">Balance</h2> <br />\r\n      </div>\r\n      <div>\r\n        <h2 className=\"bal\">£{totalIncome - totalExpense}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Balance;\r\n","import \"./IncExpView.css\";\r\nimport { IntTotalAmountProps } from \"./Interfaces\";\r\n\r\nconst IncExpView = ({\r\n  totalIncome,\r\n  totalExpense,\r\n}: IntTotalAmountProps): JSX.Element => {\r\n  return (\r\n    <div className=\"inc-exp\">\r\n      <div className=\"inc-container\">\r\n        <h2 className=\"inc-title\">Income</h2>\r\n        <br />\r\n        <h2 className=\"inc\">£{totalIncome}</h2>\r\n      </div>\r\n\r\n      <div className=\"exp-container\">\r\n        <h2 className=\"exp-title\">Expenses</h2>\r\n        <br />\r\n        <h2 className=\"exp\">£{totalExpense}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default IncExpView;\r\n","import { useState, ChangeEvent } from \"react\";\r\nimport \"./AddIncome.css\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { IntIncProps } from \"./Interfaces\";\r\n\r\ninterface AddIncomeInterface {\r\n  inc: IntIncProps[];\r\n  setInc: React.Dispatch<React.SetStateAction<IntIncProps[]>>;\r\n}\r\n\r\nconst AddIncome = ({ inc, setInc }: AddIncomeInterface): JSX.Element => {\r\n  const [addInc, setAddInc] = useState<string>(\"\");\r\n  const [addAmount, setAddAmount] = useState<string>(\"\");\r\n\r\n  const income = (): void => {\r\n    setInc([...inc, { name: addInc, amount: addAmount }]);\r\n    setAddInc(\"\");\r\n    setAddAmount(\"\");\r\n  };\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.name === \"incomeType\") {\r\n      setAddInc(e.target.value);\r\n    } else {\r\n      setAddAmount(e.target.value);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"AddIncome-container\">\r\n      <input\r\n        className=\"inc-field\"\r\n        type=\"text\"\r\n        name=\"incomeType\"\r\n        placeholder=\" Enter Income type\"\r\n        value={addInc}\r\n        onChange={handleChange}\r\n        // (e) => setAddInc(e.target.value)\r\n      />\r\n\r\n      <br />\r\n      <input\r\n        className=\"incamount-field\"\r\n        type=\"number\"\r\n        name=\"incomeAmount\"\r\n        placeholder=\" Enter Income Amount\"\r\n        value={addAmount}\r\n        onChange={handleChange}\r\n      />\r\n      <br />\r\n      <button className=\"inc-sub\" type=\"submit\" onClick={income}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <h2 className=\"inc-trans\">Income Transactions</h2>\r\n      <Scrollbars\r\n        className=\"inc-scr\"\r\n        style={{ height: 180 }}\r\n        renderThumbVertical={({ style, ...props }) => (\r\n          <div\r\n            {...props}\r\n            style={{\r\n              ...style,\r\n              backgroundColor: \"grey\",\r\n              width: \"4px\",\r\n              opacity: \"1\",\r\n            }}\r\n          />\r\n        )}\r\n      >\r\n        {inc.map((i: IntIncProps) => (\r\n          <div className=\"inc-list\">\r\n            <div\r\n              style={{\r\n                width: \"40%\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n              }}\r\n            >\r\n              {i.name}\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: \"20%\",\r\n              }}\r\n            >\r\n              £{i.amount}\r\n            </div>\r\n            <button\r\n              className=\"inc-del\"\r\n              onClick={() => {\r\n                setInc(\r\n                  inc.filter(\r\n                    (incf: IntIncProps) =>\r\n                      incf.name !== i.name || incf.amount !== i.amount\r\n                  )\r\n                );\r\n              }}\r\n            >\r\n              <MdDelete />\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n};\r\nexport default AddIncome;\r\n","import { useState } from \"react\";\r\nimport \"./AddExpense.css\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport { IntExpProps } from \"./Interfaces\";\r\n\r\ninterface AddExpenseInterface {\r\n  exp: IntExpProps[];\r\n  setExp: React.Dispatch<React.SetStateAction<IntExpProps[]>>;\r\n}\r\n\r\nconst AddExpense = ({ exp, setExp }: AddExpenseInterface): JSX.Element => {\r\n  const [AddExp, setAddExp] = useState<string>(\"\");\r\n  const [AddExpAmount, setAddExpAmount] = useState<string>(\"\");\r\n\r\n  const expense = (): void => {\r\n    setExp([...exp, { name: AddExp, amount: AddExpAmount }]);\r\n    setAddExp(\"\");\r\n    setAddExpAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"AddExpense-container\">\r\n      <input\r\n        className=\"exp-field\"\r\n        type=\"text\"\r\n        placeholder=\" Enter Expense type\"\r\n        value={AddExp}\r\n        onChange={(e) => setAddExp(e.target.value)}\r\n      />\r\n      <br />\r\n      <input\r\n        className=\"expamount-field\"\r\n        type=\"number\"\r\n        placeholder=\" Enter Expense Amount\"\r\n        value={AddExpAmount}\r\n        onChange={(e) => setAddExpAmount(e.target.value)}\r\n      />\r\n      <br />\r\n      <button className=\"exp-sub\" type=\"submit\" onClick={expense}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <h2 className=\"exp-trans\">Expense Transactions</h2>\r\n      <Scrollbars\r\n        className=\"exp-scr\"\r\n        style={{ height: 180 }}\r\n        renderThumbVertical={({ style, ...props }) => (\r\n          <div\r\n            {...props}\r\n            style={{\r\n              ...style,\r\n              backgroundColor: \"grey\",\r\n              width: \"4px\",\r\n              opacity: \"1\",\r\n            }}\r\n          />\r\n        )}\r\n      >\r\n        {exp.map((ex) => (\r\n          <div className=\"exp-list\">\r\n            <div\r\n              style={{\r\n                width: \"40%\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n              }}\r\n            >\r\n              {ex.name}\r\n            </div>\r\n            <div\r\n              style={{\r\n                width: \"20%\",\r\n              }}\r\n            >\r\n              £{ex.amount}\r\n            </div>\r\n\r\n            <button\r\n              className=\"exp-del\"\r\n              onClick={() =>\r\n                setExp(\r\n                  exp.filter(\r\n                    (expf) => expf.name !== ex.name || expf.amount !== ex.amount\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              <MdDelete />\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n};\r\nexport default AddExpense;\r\n","export default __webpack_public_path__ + \"static/media/budgetImage.72c668d3.png\";","import { Pie } from \"react-chartjs-2\";\r\nimport \"./IncExpChart.css\";\r\nimport { IntTotalAmountProps } from \"./Interfaces\";\r\n\r\nconst IncExpChart = ({\r\n  totalIncome,\r\n  totalExpense,\r\n}: IntTotalAmountProps): JSX.Element => {\r\n  return (\r\n    <div className=\"chart\">\r\n      <Pie\r\n        data={{\r\n          labels: [\"Income in Total\", \"Expense in Total\"],\r\n\r\n          datasets: [\r\n            {\r\n              label: \"Income\",\r\n              data: [totalIncome, totalExpense],\r\n              backgroundColor: [\"rgba(0,255,0, 0.5)\", \"rgba(255,0,0, 0.5)\"],\r\n            },\r\n          ],\r\n        }}\r\n        options={{ maintainAspectRatio: false }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default IncExpChart;\r\n","import { useState } from \"react\";\r\nimport \"./Components/App.css\";\r\nimport Balance from \"./Components/Balance\";\r\nimport IncExpView from \"./Components/IncExpView\";\r\nimport AddIncome from \"./Components/AddIncome\";\r\nimport AddExpense from \"./Components/AddExpense\";\r\nimport budgetImage from \"./budgetImage.png\";\r\nimport IncExpChart from \"./Components/IncExpChart\";\r\nimport { IntIncProps, IntExpProps } from \"./Components/Interfaces\";\r\n\r\nconst App = (): JSX.Element => {\r\n  const [inc, setInc] = useState<IntIncProps[]>([]);\r\n  const [exp, setExp] = useState<IntExpProps[]>([]);\r\n\r\n  const totalIncome = inc.reduce(\r\n    (totalinc, total) => (totalinc = totalinc + Number(total.amount)),\r\n    0\r\n  );\r\n  const totalExpense = exp.reduce(\r\n    (totalexp, tot) => (totalexp = totalexp + Number(tot.amount)),\r\n    0\r\n  );\r\n  return (\r\n    <div className=\"container\">\r\n      <img src={budgetImage} alt=\"Budget pic\" className=\"image\" />\r\n      <div className=\"inner-container\">\r\n        <h1 className=\"title\">BUDGET TRACKER</h1>\r\n        <div className=\"budget\">\r\n          <div className=\"left-container\">\r\n            <Balance totalIncome={totalIncome} totalExpense={totalExpense} />\r\n            <IncExpView totalIncome={totalIncome} totalExpense={totalExpense} />\r\n            <IncExpChart\r\n              totalIncome={totalIncome}\r\n              totalExpense={totalExpense}\r\n            />\r\n          </div>\r\n          <div className=\"right-container\">\r\n            <AddIncome inc={inc} setInc={setInc} />\r\n            <AddExpense exp={exp} setExp={setExp} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}